// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.deephaven.proto.backplane.grpc.session

/**
  * Servers respond with information needed to make subsequent requests tied to this session.
  * The session token should be refreshed prior to the deadline, which is represented as milliseconds since the
  * epoch. Clients are encouraged to use the expiration delay and cookie deadline to determine a good time to refresh.
  *
  * @param metadataHeader
  *  
  *   The metadata header to identify the session. This value is static and defined via configuration.
  * @param sessionToken
  *  
  *   Arbitrary session_token to assign to the value to the provided metadata header.
  * @param tokenDeadlineTimeMillis
  *  
  *   When this session_token will be considered invalid by the server.
  * @param tokenExpirationDelayMillis
  *  
  *   The length of time that this token was intended to live. Note that `refreshSessionToken` may return the
  *   existing token to reduce overhead and to prevent denial-of-service caused by refreshing too frequently.
  */
@SerialVersionUID(0L)
final case class HandshakeResponse(
    @scala.deprecated(message="Marked as deprecated in proto file", "") metadataHeader: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    @scala.deprecated(message="Marked as deprecated in proto file", "") sessionToken: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    @scala.deprecated(message="Marked as deprecated in proto file", "") tokenDeadlineTimeMillis: _root_.scala.Long = 0L,
    @scala.deprecated(message="Marked as deprecated in proto file", "") tokenExpirationDelayMillis: _root_.scala.Long = 0L,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[HandshakeResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = metadataHeader
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, __value)
        }
      };
      
      {
        val __value = sessionToken
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
        }
      };
      
      {
        val __value = tokenDeadlineTimeMillis
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeSInt64Size(3, __value)
        }
      };
      
      {
        val __value = tokenExpirationDelayMillis
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeSInt64Size(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = metadataHeader
        if (!__v.isEmpty) {
          _output__.writeBytes(1, __v)
        }
      };
      {
        val __v = sessionToken
        if (!__v.isEmpty) {
          _output__.writeBytes(2, __v)
        }
      };
      {
        val __v = tokenDeadlineTimeMillis
        if (__v != 0L) {
          _output__.writeSInt64(3, __v)
        }
      };
      {
        val __v = tokenExpirationDelayMillis
        if (__v != 0L) {
          _output__.writeSInt64(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withMetadataHeader(__v: _root_.com.google.protobuf.ByteString): HandshakeResponse = copy(metadataHeader = __v)
    def withSessionToken(__v: _root_.com.google.protobuf.ByteString): HandshakeResponse = copy(sessionToken = __v)
    def withTokenDeadlineTimeMillis(__v: _root_.scala.Long): HandshakeResponse = copy(tokenDeadlineTimeMillis = __v)
    def withTokenExpirationDelayMillis(__v: _root_.scala.Long): HandshakeResponse = copy(tokenExpirationDelayMillis = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = metadataHeader
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 2 => {
          val __t = sessionToken
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 3 => {
          val __t = tokenDeadlineTimeMillis
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = tokenExpirationDelayMillis
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PByteString(metadataHeader)
        case 2 => _root_.scalapb.descriptors.PByteString(sessionToken)
        case 3 => _root_.scalapb.descriptors.PLong(tokenDeadlineTimeMillis)
        case 4 => _root_.scalapb.descriptors.PLong(tokenExpirationDelayMillis)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.deephaven.proto.backplane.grpc.session.HandshakeResponse.type = io.deephaven.proto.backplane.grpc.session.HandshakeResponse
    // @@protoc_insertion_point(GeneratedMessage[io.deephaven.proto.backplane.grpc.HandshakeResponse])
}

object HandshakeResponse extends scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.session.HandshakeResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.session.HandshakeResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.deephaven.proto.backplane.grpc.session.HandshakeResponse = {
    var __metadataHeader: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __sessionToken: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __tokenDeadlineTimeMillis: _root_.scala.Long = 0L
    var __tokenExpirationDelayMillis: _root_.scala.Long = 0L
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __metadataHeader = _input__.readBytes()
        case 18 =>
          __sessionToken = _input__.readBytes()
        case 24 =>
          __tokenDeadlineTimeMillis = _input__.readSInt64()
        case 32 =>
          __tokenExpirationDelayMillis = _input__.readSInt64()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.deephaven.proto.backplane.grpc.session.HandshakeResponse(
        metadataHeader = __metadataHeader,
        sessionToken = __sessionToken,
        tokenDeadlineTimeMillis = __tokenDeadlineTimeMillis,
        tokenExpirationDelayMillis = __tokenExpirationDelayMillis,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.deephaven.proto.backplane.grpc.session.HandshakeResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.deephaven.proto.backplane.grpc.session.HandshakeResponse(
        metadataHeader = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        sessionToken = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        tokenDeadlineTimeMillis = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        tokenExpirationDelayMillis = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.deephaven.proto.backplane.grpc.session.SessionProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.deephaven.proto.backplane.grpc.session.SessionProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.deephaven.proto.backplane.grpc.session.HandshakeResponse(
    metadataHeader = _root_.com.google.protobuf.ByteString.EMPTY,
    sessionToken = _root_.com.google.protobuf.ByteString.EMPTY,
    tokenDeadlineTimeMillis = 0L,
    tokenExpirationDelayMillis = 0L
  )
  implicit class HandshakeResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.session.HandshakeResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.deephaven.proto.backplane.grpc.session.HandshakeResponse](_l) {
    def metadataHeader: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.metadataHeader)((c_, f_) => c_.copy(metadataHeader = f_))
    def sessionToken: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.sessionToken)((c_, f_) => c_.copy(sessionToken = f_))
    def tokenDeadlineTimeMillis: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.tokenDeadlineTimeMillis)((c_, f_) => c_.copy(tokenDeadlineTimeMillis = f_))
    def tokenExpirationDelayMillis: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.tokenExpirationDelayMillis)((c_, f_) => c_.copy(tokenExpirationDelayMillis = f_))
  }
  final val METADATA_HEADER_FIELD_NUMBER = 1
  final val SESSION_TOKEN_FIELD_NUMBER = 2
  final val TOKEN_DEADLINE_TIME_MILLIS_FIELD_NUMBER = 3
  final val TOKEN_EXPIRATION_DELAY_MILLIS_FIELD_NUMBER = 4
  def of(
    metadataHeader: _root_.com.google.protobuf.ByteString,
    sessionToken: _root_.com.google.protobuf.ByteString,
    tokenDeadlineTimeMillis: _root_.scala.Long,
    tokenExpirationDelayMillis: _root_.scala.Long
  ): _root_.io.deephaven.proto.backplane.grpc.session.HandshakeResponse = _root_.io.deephaven.proto.backplane.grpc.session.HandshakeResponse(
    metadataHeader,
    sessionToken,
    tokenDeadlineTimeMillis,
    tokenExpirationDelayMillis
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.HandshakeResponse])
}
