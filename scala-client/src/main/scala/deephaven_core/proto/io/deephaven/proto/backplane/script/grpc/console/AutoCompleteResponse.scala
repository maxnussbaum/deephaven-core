// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.deephaven.proto.backplane.script.grpc.console

@SerialVersionUID(0L)
final case class AutoCompleteResponse(
    requestId: _root_.scala.Int = 0,
    success: _root_.scala.Boolean = false,
    response: io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AutoCompleteResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = requestId
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, __value)
        }
      };
      
      {
        val __value = success
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, __value)
        }
      };
      if (response.completionItems.isDefined) {
        val __value = response.completionItems.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (response.signatures.isDefined) {
        val __value = response.signatures.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (response.hover.isDefined) {
        val __value = response.hover.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (response.diagnostic.isDefined) {
        val __value = response.diagnostic.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (response.diagnosticPublish.isDefined) {
        val __value = response.diagnosticPublish.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      response.completionItems.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = requestId
        if (__v != 0) {
          _output__.writeInt32(2, __v)
        }
      };
      {
        val __v = success
        if (__v != false) {
          _output__.writeBool(3, __v)
        }
      };
      response.signatures.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      response.hover.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      response.diagnostic.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      response.diagnosticPublish.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withRequestId(__v: _root_.scala.Int): AutoCompleteResponse = copy(requestId = __v)
    def withSuccess(__v: _root_.scala.Boolean): AutoCompleteResponse = copy(success = __v)
    def getCompletionItems: io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsResponse = response.completionItems.getOrElse(io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsResponse.defaultInstance)
    def withCompletionItems(__v: io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsResponse): AutoCompleteResponse = copy(response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.CompletionItems(__v))
    def getSignatures: io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpResponse = response.signatures.getOrElse(io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpResponse.defaultInstance)
    def withSignatures(__v: io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpResponse): AutoCompleteResponse = copy(response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Signatures(__v))
    def getHover: io.deephaven.proto.backplane.script.grpc.console.GetHoverResponse = response.hover.getOrElse(io.deephaven.proto.backplane.script.grpc.console.GetHoverResponse.defaultInstance)
    def withHover(__v: io.deephaven.proto.backplane.script.grpc.console.GetHoverResponse): AutoCompleteResponse = copy(response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Hover(__v))
    def getDiagnostic: io.deephaven.proto.backplane.script.grpc.console.GetPullDiagnosticResponse = response.diagnostic.getOrElse(io.deephaven.proto.backplane.script.grpc.console.GetPullDiagnosticResponse.defaultInstance)
    def withDiagnostic(__v: io.deephaven.proto.backplane.script.grpc.console.GetPullDiagnosticResponse): AutoCompleteResponse = copy(response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Diagnostic(__v))
    def getDiagnosticPublish: io.deephaven.proto.backplane.script.grpc.console.GetPublishDiagnosticResponse = response.diagnosticPublish.getOrElse(io.deephaven.proto.backplane.script.grpc.console.GetPublishDiagnosticResponse.defaultInstance)
    def withDiagnosticPublish(__v: io.deephaven.proto.backplane.script.grpc.console.GetPublishDiagnosticResponse): AutoCompleteResponse = copy(response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.DiagnosticPublish(__v))
    def clearResponse: AutoCompleteResponse = copy(response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Empty)
    def withResponse(__v: io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response): AutoCompleteResponse = copy(response = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => {
          val __t = requestId
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = success
          if (__t != false) __t else null
        }
        case 1 => response.completionItems.orNull
        case 4 => response.signatures.orNull
        case 5 => response.hover.orNull
        case 6 => response.diagnostic.orNull
        case 7 => response.diagnosticPublish.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 2 => _root_.scalapb.descriptors.PInt(requestId)
        case 3 => _root_.scalapb.descriptors.PBoolean(success)
        case 1 => response.completionItems.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => response.signatures.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => response.hover.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => response.diagnostic.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => response.diagnosticPublish.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.type = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse
    // @@protoc_insertion_point(GeneratedMessage[io.deephaven.proto.backplane.script.grpc.AutoCompleteResponse])
}

object AutoCompleteResponse extends scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse = {
    var __requestId: _root_.scala.Int = 0
    var __success: _root_.scala.Boolean = false
    var __response: io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 16 =>
          __requestId = _input__.readInt32()
        case 24 =>
          __success = _input__.readBool()
        case 10 =>
          __response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.CompletionItems(__response.completionItems.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsResponse](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Signatures(__response.signatures.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpResponse](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Hover(__response.hover.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.GetHoverResponse](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Diagnostic(__response.diagnostic.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.GetPullDiagnosticResponse](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.DiagnosticPublish(__response.diagnosticPublish.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.GetPublishDiagnosticResponse](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse(
        requestId = __requestId,
        success = __success,
        response = __response,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse(
        requestId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        success = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        response = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsResponse]]).map(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.CompletionItems(_))
            .orElse[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpResponse]]).map(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Signatures(_)))
            .orElse[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetHoverResponse]]).map(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Hover(_)))
            .orElse[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetPullDiagnosticResponse]]).map(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Diagnostic(_)))
            .orElse[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetPublishDiagnosticResponse]]).map(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.DiagnosticPublish(_)))
            .getOrElse(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ConsoleProto.javaDescriptor.getMessageTypes().get(17)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ConsoleProto.scalaDescriptor.messages(17)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsResponse
      case 4 => __out = io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpResponse
      case 5 => __out = io.deephaven.proto.backplane.script.grpc.console.GetHoverResponse
      case 6 => __out = io.deephaven.proto.backplane.script.grpc.console.GetPullDiagnosticResponse
      case 7 => __out = io.deephaven.proto.backplane.script.grpc.console.GetPublishDiagnosticResponse
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse(
    requestId = 0,
    success = false,
    response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Empty
  )
  sealed trait Response extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isCompletionItems: _root_.scala.Boolean = false
    def isSignatures: _root_.scala.Boolean = false
    def isHover: _root_.scala.Boolean = false
    def isDiagnostic: _root_.scala.Boolean = false
    def isDiagnosticPublish: _root_.scala.Boolean = false
    def completionItems: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsResponse] = _root_.scala.None
    def signatures: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpResponse] = _root_.scala.None
    def hover: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetHoverResponse] = _root_.scala.None
    def diagnostic: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetPullDiagnosticResponse] = _root_.scala.None
    def diagnosticPublish: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetPublishDiagnosticResponse] = _root_.scala.None
  }
  object Response {
    @SerialVersionUID(0L)
    case object Empty extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class CompletionItems(value: io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsResponse) extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response {
      type ValueType = io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsResponse
      override def isCompletionItems: _root_.scala.Boolean = true
      override def completionItems: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsResponse] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class Signatures(value: io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpResponse) extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response {
      type ValueType = io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpResponse
      override def isSignatures: _root_.scala.Boolean = true
      override def signatures: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpResponse] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class Hover(value: io.deephaven.proto.backplane.script.grpc.console.GetHoverResponse) extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response {
      type ValueType = io.deephaven.proto.backplane.script.grpc.console.GetHoverResponse
      override def isHover: _root_.scala.Boolean = true
      override def hover: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetHoverResponse] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class Diagnostic(value: io.deephaven.proto.backplane.script.grpc.console.GetPullDiagnosticResponse) extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response {
      type ValueType = io.deephaven.proto.backplane.script.grpc.console.GetPullDiagnosticResponse
      override def isDiagnostic: _root_.scala.Boolean = true
      override def diagnostic: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetPullDiagnosticResponse] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class DiagnosticPublish(value: io.deephaven.proto.backplane.script.grpc.console.GetPublishDiagnosticResponse) extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response {
      type ValueType = io.deephaven.proto.backplane.script.grpc.console.GetPublishDiagnosticResponse
      override def isDiagnosticPublish: _root_.scala.Boolean = true
      override def diagnosticPublish: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetPublishDiagnosticResponse] = Some(value)
      override def number: _root_.scala.Int = 7
    }
  }
  implicit class AutoCompleteResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse](_l) {
    def requestId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.requestId)((c_, f_) => c_.copy(requestId = f_))
    def success: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.success)((c_, f_) => c_.copy(success = f_))
    def completionItems: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsResponse] = field(_.getCompletionItems)((c_, f_) => c_.copy(response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.CompletionItems(f_)))
    def signatures: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpResponse] = field(_.getSignatures)((c_, f_) => c_.copy(response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Signatures(f_)))
    def hover: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.GetHoverResponse] = field(_.getHover)((c_, f_) => c_.copy(response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Hover(f_)))
    def diagnostic: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.GetPullDiagnosticResponse] = field(_.getDiagnostic)((c_, f_) => c_.copy(response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.Diagnostic(f_)))
    def diagnosticPublish: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.GetPublishDiagnosticResponse] = field(_.getDiagnosticPublish)((c_, f_) => c_.copy(response = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response.DiagnosticPublish(f_)))
    def response: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response] = field(_.response)((c_, f_) => c_.copy(response = f_))
  }
  final val REQUEST_ID_FIELD_NUMBER = 2
  final val SUCCESS_FIELD_NUMBER = 3
  final val COMPLETION_ITEMS_FIELD_NUMBER = 1
  final val SIGNATURES_FIELD_NUMBER = 4
  final val HOVER_FIELD_NUMBER = 5
  final val DIAGNOSTIC_FIELD_NUMBER = 6
  final val DIAGNOSTIC_PUBLISH_FIELD_NUMBER = 7
  def of(
    requestId: _root_.scala.Int,
    success: _root_.scala.Boolean,
    response: io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse.Response
  ): _root_.io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse = _root_.io.deephaven.proto.backplane.script.grpc.console.AutoCompleteResponse(
    requestId,
    success,
    response
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[io.deephaven.proto.backplane.script.grpc.AutoCompleteResponse])
}
