// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.deephaven.proto.backplane.grpc.table

@SerialVersionUID(0L)
final case class SortDescriptor(
    columnName: _root_.scala.Predef.String = "",
    isAbsolute: _root_.scala.Boolean = false,
    direction: io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection = io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection.UNKNOWN,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SortDescriptor] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = columnName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = isAbsolute
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
        }
      };
      
      {
        val __value = direction.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = columnName
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = isAbsolute
        if (__v != false) {
          _output__.writeBool(2, __v)
        }
      };
      {
        val __v = direction.value
        if (__v != 0) {
          _output__.writeEnum(3, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withColumnName(__v: _root_.scala.Predef.String): SortDescriptor = copy(columnName = __v)
    def withIsAbsolute(__v: _root_.scala.Boolean): SortDescriptor = copy(isAbsolute = __v)
    def withDirection(__v: io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection): SortDescriptor = copy(direction = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = columnName
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = isAbsolute
          if (__t != false) __t else null
        }
        case 3 => {
          val __t = direction.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(columnName)
        case 2 => _root_.scalapb.descriptors.PBoolean(isAbsolute)
        case 3 => _root_.scalapb.descriptors.PEnum(direction.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.deephaven.proto.backplane.grpc.table.SortDescriptor.type = io.deephaven.proto.backplane.grpc.table.SortDescriptor
    // @@protoc_insertion_point(GeneratedMessage[io.deephaven.proto.backplane.grpc.SortDescriptor])
}

object SortDescriptor extends scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.table.SortDescriptor] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.table.SortDescriptor] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.deephaven.proto.backplane.grpc.table.SortDescriptor = {
    var __columnName: _root_.scala.Predef.String = ""
    var __isAbsolute: _root_.scala.Boolean = false
    var __direction: io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection = io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection.UNKNOWN
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __columnName = _input__.readStringRequireUtf8()
        case 16 =>
          __isAbsolute = _input__.readBool()
        case 24 =>
          __direction = io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.deephaven.proto.backplane.grpc.table.SortDescriptor(
        columnName = __columnName,
        isAbsolute = __isAbsolute,
        direction = __direction,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.deephaven.proto.backplane.grpc.table.SortDescriptor] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.deephaven.proto.backplane.grpc.table.SortDescriptor(
        columnName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        isAbsolute = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        direction = io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection.UNKNOWN.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.deephaven.proto.backplane.grpc.table.TableProto.javaDescriptor.getMessageTypes().get(38)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.deephaven.proto.backplane.grpc.table.TableProto.scalaDescriptor.messages(38)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection
    }
  }
  lazy val defaultInstance = io.deephaven.proto.backplane.grpc.table.SortDescriptor(
    columnName = "",
    isAbsolute = false,
    direction = io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection.UNKNOWN
  )
  sealed abstract class SortDirection(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection
    type RecognizedType = io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection.Recognized
    def isUnknown: _root_.scala.Boolean = false
    def isDescending: _root_.scala.Boolean = false
    def isAscending: _root_.scala.Boolean = false
    def isReverse: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[SortDirection] = io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection
    final def asRecognized: _root_.scala.Option[io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection.Recognized])
  }
  
  object SortDirection extends _root_.scalapb.GeneratedEnumCompanion[SortDirection] {
    sealed trait Recognized extends SortDirection
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[SortDirection] = this
    
    @SerialVersionUID(0L)
    case object UNKNOWN extends SortDirection(0) with SortDirection.Recognized {
      val index = 0
      val name = "UNKNOWN"
      override def isUnknown: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object DESCENDING extends SortDirection(-1) with SortDirection.Recognized {
      val index = 1
      val name = "DESCENDING"
      override def isDescending: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object ASCENDING extends SortDirection(1) with SortDirection.Recognized {
      val index = 2
      val name = "ASCENDING"
      override def isAscending: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object REVERSE extends SortDirection(2) with SortDirection.Recognized {
      val index = 3
      val name = "REVERSE"
      override def isReverse: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends SortDirection(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(UNKNOWN, DESCENDING, ASCENDING, REVERSE)
    def fromValue(__value: _root_.scala.Int): SortDirection = __value match {
      case -1 => DESCENDING
      case 0 => UNKNOWN
      case 1 => ASCENDING
      case 2 => REVERSE
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = io.deephaven.proto.backplane.grpc.table.SortDescriptor.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = io.deephaven.proto.backplane.grpc.table.SortDescriptor.scalaDescriptor.enums(0)
  }
  implicit class SortDescriptorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.table.SortDescriptor]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.deephaven.proto.backplane.grpc.table.SortDescriptor](_l) {
    def columnName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.columnName)((c_, f_) => c_.copy(columnName = f_))
    def isAbsolute: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isAbsolute)((c_, f_) => c_.copy(isAbsolute = f_))
    def direction: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection] = field(_.direction)((c_, f_) => c_.copy(direction = f_))
  }
  final val COLUMN_NAME_FIELD_NUMBER = 1
  final val IS_ABSOLUTE_FIELD_NUMBER = 2
  final val DIRECTION_FIELD_NUMBER = 3
  def of(
    columnName: _root_.scala.Predef.String,
    isAbsolute: _root_.scala.Boolean,
    direction: io.deephaven.proto.backplane.grpc.table.SortDescriptor.SortDirection
  ): _root_.io.deephaven.proto.backplane.grpc.table.SortDescriptor = _root_.io.deephaven.proto.backplane.grpc.table.SortDescriptor(
    columnName,
    isAbsolute,
    direction
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.SortDescriptor])
}
