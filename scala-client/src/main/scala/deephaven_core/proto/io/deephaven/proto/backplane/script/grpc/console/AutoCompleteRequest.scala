// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.deephaven.proto.backplane.script.grpc.console

@SerialVersionUID(0L)
final case class AutoCompleteRequest(
    consoleId: _root_.scala.Option[io.deephaven.proto.backplane.grpc.ticket.Ticket] = _root_.scala.None,
    requestId: _root_.scala.Int = 0,
    request: io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AutoCompleteRequest] {
    @transient
    private var __serializedSizeMemoized: _root_.scala.Int = 0
    private def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (consoleId.isDefined) {
        val __value = consoleId.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = requestId
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(6, __value)
        }
      };
      if (request.openDocument.isDefined) {
        val __value = request.openDocument.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (request.changeDocument.isDefined) {
        val __value = request.changeDocument.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (request.getCompletionItems.isDefined) {
        val __value = request.getCompletionItems.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (request.getSignatureHelp.isDefined) {
        val __value = request.getSignatureHelp.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (request.getHover.isDefined) {
        val __value = request.getHover.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (request.getDiagnostic.isDefined) {
        val __value = request.getDiagnostic.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (request.closeDocument.isDefined) {
        val __value = request.closeDocument.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      request.openDocument.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      request.changeDocument.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      request.getCompletionItems.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      request.closeDocument.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      consoleId.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = requestId
        if (__v != 0) {
          _output__.writeInt32(6, __v)
        }
      };
      request.getSignatureHelp.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      request.getHover.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      request.getDiagnostic.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getConsoleId: io.deephaven.proto.backplane.grpc.ticket.Ticket = consoleId.getOrElse(io.deephaven.proto.backplane.grpc.ticket.Ticket.defaultInstance)
    def clearConsoleId: AutoCompleteRequest = copy(consoleId = _root_.scala.None)
    def withConsoleId(__v: io.deephaven.proto.backplane.grpc.ticket.Ticket): AutoCompleteRequest = copy(consoleId = Option(__v))
    def withRequestId(__v: _root_.scala.Int): AutoCompleteRequest = copy(requestId = __v)
    def getOpenDocument: io.deephaven.proto.backplane.script.grpc.console.OpenDocumentRequest = request.openDocument.getOrElse(io.deephaven.proto.backplane.script.grpc.console.OpenDocumentRequest.defaultInstance)
    def withOpenDocument(__v: io.deephaven.proto.backplane.script.grpc.console.OpenDocumentRequest): AutoCompleteRequest = copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.OpenDocument(__v))
    def getChangeDocument: io.deephaven.proto.backplane.script.grpc.console.ChangeDocumentRequest = request.changeDocument.getOrElse(io.deephaven.proto.backplane.script.grpc.console.ChangeDocumentRequest.defaultInstance)
    def withChangeDocument(__v: io.deephaven.proto.backplane.script.grpc.console.ChangeDocumentRequest): AutoCompleteRequest = copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.ChangeDocument(__v))
    def getGetCompletionItems: io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsRequest = request.getCompletionItems.getOrElse(io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsRequest.defaultInstance)
    def withGetCompletionItems(__v: io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsRequest): AutoCompleteRequest = copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetCompletionItems(__v))
    def getGetSignatureHelp: io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpRequest = request.getSignatureHelp.getOrElse(io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpRequest.defaultInstance)
    def withGetSignatureHelp(__v: io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpRequest): AutoCompleteRequest = copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetSignatureHelp(__v))
    def getGetHover: io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest = request.getHover.getOrElse(io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest.defaultInstance)
    def withGetHover(__v: io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest): AutoCompleteRequest = copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetHover(__v))
    def getGetDiagnostic: io.deephaven.proto.backplane.script.grpc.console.GetDiagnosticRequest = request.getDiagnostic.getOrElse(io.deephaven.proto.backplane.script.grpc.console.GetDiagnosticRequest.defaultInstance)
    def withGetDiagnostic(__v: io.deephaven.proto.backplane.script.grpc.console.GetDiagnosticRequest): AutoCompleteRequest = copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetDiagnostic(__v))
    def getCloseDocument: io.deephaven.proto.backplane.script.grpc.console.CloseDocumentRequest = request.closeDocument.getOrElse(io.deephaven.proto.backplane.script.grpc.console.CloseDocumentRequest.defaultInstance)
    def withCloseDocument(__v: io.deephaven.proto.backplane.script.grpc.console.CloseDocumentRequest): AutoCompleteRequest = copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.CloseDocument(__v))
    def clearRequest: AutoCompleteRequest = copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.Empty)
    def withRequest(__v: io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request): AutoCompleteRequest = copy(request = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 5 => consoleId.orNull
        case 6 => {
          val __t = requestId
          if (__t != 0) __t else null
        }
        case 1 => request.openDocument.orNull
        case 2 => request.changeDocument.orNull
        case 3 => request.getCompletionItems.orNull
        case 7 => request.getSignatureHelp.orNull
        case 8 => request.getHover.orNull
        case 9 => request.getDiagnostic.orNull
        case 4 => request.closeDocument.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 5 => consoleId.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => _root_.scalapb.descriptors.PInt(requestId)
        case 1 => request.openDocument.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => request.changeDocument.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => request.getCompletionItems.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => request.getSignatureHelp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => request.getHover.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => request.getDiagnostic.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => request.closeDocument.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.type = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest
    // @@protoc_insertion_point(GeneratedMessage[io.deephaven.proto.backplane.script.grpc.AutoCompleteRequest])
}

object AutoCompleteRequest extends scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest = {
    var __consoleId: _root_.scala.Option[io.deephaven.proto.backplane.grpc.ticket.Ticket] = _root_.scala.None
    var __requestId: _root_.scala.Int = 0
    var __request: io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 42 =>
          __consoleId = _root_.scala.Option(__consoleId.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.grpc.ticket.Ticket](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 48 =>
          __requestId = _input__.readInt32()
        case 10 =>
          __request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.OpenDocument(__request.openDocument.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.OpenDocumentRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.ChangeDocument(__request.changeDocument.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.ChangeDocumentRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetCompletionItems(__request.getCompletionItems.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetSignatureHelp(__request.getSignatureHelp.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 66 =>
          __request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetHover(__request.getHover.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 74 =>
          __request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetDiagnostic(__request.getDiagnostic.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.GetDiagnosticRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.CloseDocument(__request.closeDocument.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.CloseDocumentRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest(
        consoleId = __consoleId,
        requestId = __requestId,
        request = __request,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest(
        consoleId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.grpc.ticket.Ticket]]),
        requestId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        request = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.OpenDocumentRequest]]).map(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.OpenDocument(_))
            .orElse[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.ChangeDocumentRequest]]).map(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.ChangeDocument(_)))
            .orElse[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsRequest]]).map(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetCompletionItems(_)))
            .orElse[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpRequest]]).map(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetSignatureHelp(_)))
            .orElse[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest]]).map(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetHover(_)))
            .orElse[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetDiagnosticRequest]]).map(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetDiagnostic(_)))
            .orElse[io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.CloseDocumentRequest]]).map(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.CloseDocument(_)))
            .getOrElse(io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ConsoleProto.javaDescriptor.getMessageTypes().get(16)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ConsoleProto.scalaDescriptor.messages(16)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 5 => __out = io.deephaven.proto.backplane.grpc.ticket.Ticket
      case 1 => __out = io.deephaven.proto.backplane.script.grpc.console.OpenDocumentRequest
      case 2 => __out = io.deephaven.proto.backplane.script.grpc.console.ChangeDocumentRequest
      case 3 => __out = io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsRequest
      case 7 => __out = io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpRequest
      case 8 => __out = io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest
      case 9 => __out = io.deephaven.proto.backplane.script.grpc.console.GetDiagnosticRequest
      case 4 => __out = io.deephaven.proto.backplane.script.grpc.console.CloseDocumentRequest
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest(
    consoleId = _root_.scala.None,
    requestId = 0,
    request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.Empty
  )
  sealed trait Request extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isOpenDocument: _root_.scala.Boolean = false
    def isChangeDocument: _root_.scala.Boolean = false
    def isGetCompletionItems: _root_.scala.Boolean = false
    def isGetSignatureHelp: _root_.scala.Boolean = false
    def isGetHover: _root_.scala.Boolean = false
    def isGetDiagnostic: _root_.scala.Boolean = false
    def isCloseDocument: _root_.scala.Boolean = false
    def openDocument: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.OpenDocumentRequest] = _root_.scala.None
    def changeDocument: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.ChangeDocumentRequest] = _root_.scala.None
    def getCompletionItems: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsRequest] = _root_.scala.None
    def getSignatureHelp: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpRequest] = _root_.scala.None
    def getHover: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest] = _root_.scala.None
    def getDiagnostic: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetDiagnosticRequest] = _root_.scala.None
    def closeDocument: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.CloseDocumentRequest] = _root_.scala.None
  }
  object Request {
    @SerialVersionUID(0L)
    case object Empty extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class OpenDocument(value: io.deephaven.proto.backplane.script.grpc.console.OpenDocumentRequest) extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request {
      type ValueType = io.deephaven.proto.backplane.script.grpc.console.OpenDocumentRequest
      override def isOpenDocument: _root_.scala.Boolean = true
      override def openDocument: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.OpenDocumentRequest] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class ChangeDocument(value: io.deephaven.proto.backplane.script.grpc.console.ChangeDocumentRequest) extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request {
      type ValueType = io.deephaven.proto.backplane.script.grpc.console.ChangeDocumentRequest
      override def isChangeDocument: _root_.scala.Boolean = true
      override def changeDocument: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.ChangeDocumentRequest] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class GetCompletionItems(value: io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsRequest) extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request {
      type ValueType = io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsRequest
      override def isGetCompletionItems: _root_.scala.Boolean = true
      override def getCompletionItems: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsRequest] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class GetSignatureHelp(value: io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpRequest) extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request {
      type ValueType = io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpRequest
      override def isGetSignatureHelp: _root_.scala.Boolean = true
      override def getSignatureHelp: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpRequest] = Some(value)
      override def number: _root_.scala.Int = 7
    }
    @SerialVersionUID(0L)
    final case class GetHover(value: io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest) extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request {
      type ValueType = io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest
      override def isGetHover: _root_.scala.Boolean = true
      override def getHover: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest] = Some(value)
      override def number: _root_.scala.Int = 8
    }
    @SerialVersionUID(0L)
    final case class GetDiagnostic(value: io.deephaven.proto.backplane.script.grpc.console.GetDiagnosticRequest) extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request {
      type ValueType = io.deephaven.proto.backplane.script.grpc.console.GetDiagnosticRequest
      override def isGetDiagnostic: _root_.scala.Boolean = true
      override def getDiagnostic: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.GetDiagnosticRequest] = Some(value)
      override def number: _root_.scala.Int = 9
    }
    @SerialVersionUID(0L)
    final case class CloseDocument(value: io.deephaven.proto.backplane.script.grpc.console.CloseDocumentRequest) extends io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request {
      type ValueType = io.deephaven.proto.backplane.script.grpc.console.CloseDocumentRequest
      override def isCloseDocument: _root_.scala.Boolean = true
      override def closeDocument: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.CloseDocumentRequest] = Some(value)
      override def number: _root_.scala.Int = 4
    }
  }
  implicit class AutoCompleteRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest](_l) {
    def consoleId: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.ticket.Ticket] = field(_.getConsoleId)((c_, f_) => c_.copy(consoleId = _root_.scala.Option(f_)))
    def optionalConsoleId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.deephaven.proto.backplane.grpc.ticket.Ticket]] = field(_.consoleId)((c_, f_) => c_.copy(consoleId = f_))
    def requestId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.requestId)((c_, f_) => c_.copy(requestId = f_))
    def openDocument: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.OpenDocumentRequest] = field(_.getOpenDocument)((c_, f_) => c_.copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.OpenDocument(f_)))
    def changeDocument: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.ChangeDocumentRequest] = field(_.getChangeDocument)((c_, f_) => c_.copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.ChangeDocument(f_)))
    def getCompletionItems: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.GetCompletionItemsRequest] = field(_.getGetCompletionItems)((c_, f_) => c_.copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetCompletionItems(f_)))
    def getSignatureHelp: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.GetSignatureHelpRequest] = field(_.getGetSignatureHelp)((c_, f_) => c_.copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetSignatureHelp(f_)))
    def getHover: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest] = field(_.getGetHover)((c_, f_) => c_.copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetHover(f_)))
    def getDiagnostic: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.GetDiagnosticRequest] = field(_.getGetDiagnostic)((c_, f_) => c_.copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.GetDiagnostic(f_)))
    def closeDocument: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.CloseDocumentRequest] = field(_.getCloseDocument)((c_, f_) => c_.copy(request = io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request.CloseDocument(f_)))
    def request: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request] = field(_.request)((c_, f_) => c_.copy(request = f_))
  }
  final val CONSOLE_ID_FIELD_NUMBER = 5
  final val REQUEST_ID_FIELD_NUMBER = 6
  final val OPEN_DOCUMENT_FIELD_NUMBER = 1
  final val CHANGE_DOCUMENT_FIELD_NUMBER = 2
  final val GET_COMPLETION_ITEMS_FIELD_NUMBER = 3
  final val GET_SIGNATURE_HELP_FIELD_NUMBER = 7
  final val GET_HOVER_FIELD_NUMBER = 8
  final val GET_DIAGNOSTIC_FIELD_NUMBER = 9
  final val CLOSE_DOCUMENT_FIELD_NUMBER = 4
  def of(
    consoleId: _root_.scala.Option[io.deephaven.proto.backplane.grpc.ticket.Ticket],
    requestId: _root_.scala.Int,
    request: io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest.Request
  ): _root_.io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest = _root_.io.deephaven.proto.backplane.script.grpc.console.AutoCompleteRequest(
    consoleId,
    requestId,
    request
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[io.deephaven.proto.backplane.script.grpc.AutoCompleteRequest])
}
