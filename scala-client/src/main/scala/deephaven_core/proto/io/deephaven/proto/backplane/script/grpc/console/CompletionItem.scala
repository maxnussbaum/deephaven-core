// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.deephaven.proto.backplane.script.grpc.console

@SerialVersionUID(0L)
final case class CompletionItem(
    start: _root_.scala.Int = 0,
    length: _root_.scala.Int = 0,
    label: _root_.scala.Predef.String = "",
    kind: _root_.scala.Int = 0,
    detail: _root_.scala.Predef.String = "",
    deprecated: _root_.scala.Boolean = false,
    preselect: _root_.scala.Boolean = false,
    textEdit: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.TextEdit] = _root_.scala.None,
    sortText: _root_.scala.Predef.String = "",
    filterText: _root_.scala.Predef.String = "",
    insertTextFormat: _root_.scala.Int = 0,
    additionalTextEdits: _root_.scala.Seq[io.deephaven.proto.backplane.script.grpc.console.TextEdit] = _root_.scala.Seq.empty,
    commitCharacters: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    documentation: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.MarkupContent] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[CompletionItem] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = start
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      
      {
        val __value = length
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, __value)
        }
      };
      
      {
        val __value = label
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = kind
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, __value)
        }
      };
      
      {
        val __value = detail
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = deprecated
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(7, __value)
        }
      };
      
      {
        val __value = preselect
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(8, __value)
        }
      };
      if (textEdit.isDefined) {
        val __value = textEdit.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = sortText
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
        }
      };
      
      {
        val __value = filterText
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
        }
      };
      
      {
        val __value = insertTextFormat
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(12, __value)
        }
      };
      additionalTextEdits.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      commitCharacters.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(14, __value)
      }
      if (documentation.isDefined) {
        val __value = documentation.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = start
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
      {
        val __v = length
        if (__v != 0) {
          _output__.writeInt32(2, __v)
        }
      };
      {
        val __v = label
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = kind
        if (__v != 0) {
          _output__.writeInt32(4, __v)
        }
      };
      {
        val __v = detail
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = deprecated
        if (__v != false) {
          _output__.writeBool(7, __v)
        }
      };
      {
        val __v = preselect
        if (__v != false) {
          _output__.writeBool(8, __v)
        }
      };
      textEdit.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = sortText
        if (!__v.isEmpty) {
          _output__.writeString(10, __v)
        }
      };
      {
        val __v = filterText
        if (!__v.isEmpty) {
          _output__.writeString(11, __v)
        }
      };
      {
        val __v = insertTextFormat
        if (__v != 0) {
          _output__.writeInt32(12, __v)
        }
      };
      additionalTextEdits.foreach { __v =>
        val __m = __v
        _output__.writeTag(13, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      commitCharacters.foreach { __v =>
        val __m = __v
        _output__.writeString(14, __m)
      };
      documentation.foreach { __v =>
        val __m = __v
        _output__.writeTag(15, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withStart(__v: _root_.scala.Int): CompletionItem = copy(start = __v)
    def withLength(__v: _root_.scala.Int): CompletionItem = copy(length = __v)
    def withLabel(__v: _root_.scala.Predef.String): CompletionItem = copy(label = __v)
    def withKind(__v: _root_.scala.Int): CompletionItem = copy(kind = __v)
    def withDetail(__v: _root_.scala.Predef.String): CompletionItem = copy(detail = __v)
    def withDeprecated(__v: _root_.scala.Boolean): CompletionItem = copy(deprecated = __v)
    def withPreselect(__v: _root_.scala.Boolean): CompletionItem = copy(preselect = __v)
    def getTextEdit: io.deephaven.proto.backplane.script.grpc.console.TextEdit = textEdit.getOrElse(io.deephaven.proto.backplane.script.grpc.console.TextEdit.defaultInstance)
    def clearTextEdit: CompletionItem = copy(textEdit = _root_.scala.None)
    def withTextEdit(__v: io.deephaven.proto.backplane.script.grpc.console.TextEdit): CompletionItem = copy(textEdit = Option(__v))
    def withSortText(__v: _root_.scala.Predef.String): CompletionItem = copy(sortText = __v)
    def withFilterText(__v: _root_.scala.Predef.String): CompletionItem = copy(filterText = __v)
    def withInsertTextFormat(__v: _root_.scala.Int): CompletionItem = copy(insertTextFormat = __v)
    def clearAdditionalTextEdits = copy(additionalTextEdits = _root_.scala.Seq.empty)
    def addAdditionalTextEdits(__vs: io.deephaven.proto.backplane.script.grpc.console.TextEdit *): CompletionItem = addAllAdditionalTextEdits(__vs)
    def addAllAdditionalTextEdits(__vs: Iterable[io.deephaven.proto.backplane.script.grpc.console.TextEdit]): CompletionItem = copy(additionalTextEdits = additionalTextEdits ++ __vs)
    def withAdditionalTextEdits(__v: _root_.scala.Seq[io.deephaven.proto.backplane.script.grpc.console.TextEdit]): CompletionItem = copy(additionalTextEdits = __v)
    def clearCommitCharacters = copy(commitCharacters = _root_.scala.Seq.empty)
    def addCommitCharacters(__vs: _root_.scala.Predef.String *): CompletionItem = addAllCommitCharacters(__vs)
    def addAllCommitCharacters(__vs: Iterable[_root_.scala.Predef.String]): CompletionItem = copy(commitCharacters = commitCharacters ++ __vs)
    def withCommitCharacters(__v: _root_.scala.Seq[_root_.scala.Predef.String]): CompletionItem = copy(commitCharacters = __v)
    def getDocumentation: io.deephaven.proto.backplane.script.grpc.console.MarkupContent = documentation.getOrElse(io.deephaven.proto.backplane.script.grpc.console.MarkupContent.defaultInstance)
    def clearDocumentation: CompletionItem = copy(documentation = _root_.scala.None)
    def withDocumentation(__v: io.deephaven.proto.backplane.script.grpc.console.MarkupContent): CompletionItem = copy(documentation = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = start
          if (__t != 0) __t else null
        }
        case 2 => {
          val __t = length
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = label
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = kind
          if (__t != 0) __t else null
        }
        case 5 => {
          val __t = detail
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = deprecated
          if (__t != false) __t else null
        }
        case 8 => {
          val __t = preselect
          if (__t != false) __t else null
        }
        case 9 => textEdit.orNull
        case 10 => {
          val __t = sortText
          if (__t != "") __t else null
        }
        case 11 => {
          val __t = filterText
          if (__t != "") __t else null
        }
        case 12 => {
          val __t = insertTextFormat
          if (__t != 0) __t else null
        }
        case 13 => additionalTextEdits
        case 14 => commitCharacters
        case 15 => documentation.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(start)
        case 2 => _root_.scalapb.descriptors.PInt(length)
        case 3 => _root_.scalapb.descriptors.PString(label)
        case 4 => _root_.scalapb.descriptors.PInt(kind)
        case 5 => _root_.scalapb.descriptors.PString(detail)
        case 7 => _root_.scalapb.descriptors.PBoolean(deprecated)
        case 8 => _root_.scalapb.descriptors.PBoolean(preselect)
        case 9 => textEdit.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => _root_.scalapb.descriptors.PString(sortText)
        case 11 => _root_.scalapb.descriptors.PString(filterText)
        case 12 => _root_.scalapb.descriptors.PInt(insertTextFormat)
        case 13 => _root_.scalapb.descriptors.PRepeated(additionalTextEdits.iterator.map(_.toPMessage).toVector)
        case 14 => _root_.scalapb.descriptors.PRepeated(commitCharacters.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 15 => documentation.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.deephaven.proto.backplane.script.grpc.console.CompletionItem.type = io.deephaven.proto.backplane.script.grpc.console.CompletionItem
    // @@protoc_insertion_point(GeneratedMessage[io.deephaven.proto.backplane.script.grpc.CompletionItem])
}

object CompletionItem extends scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.script.grpc.console.CompletionItem] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.script.grpc.console.CompletionItem] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.deephaven.proto.backplane.script.grpc.console.CompletionItem = {
    var __start: _root_.scala.Int = 0
    var __length: _root_.scala.Int = 0
    var __label: _root_.scala.Predef.String = ""
    var __kind: _root_.scala.Int = 0
    var __detail: _root_.scala.Predef.String = ""
    var __deprecated: _root_.scala.Boolean = false
    var __preselect: _root_.scala.Boolean = false
    var __textEdit: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.TextEdit] = _root_.scala.None
    var __sortText: _root_.scala.Predef.String = ""
    var __filterText: _root_.scala.Predef.String = ""
    var __insertTextFormat: _root_.scala.Int = 0
    val __additionalTextEdits: _root_.scala.collection.immutable.VectorBuilder[io.deephaven.proto.backplane.script.grpc.console.TextEdit] = new _root_.scala.collection.immutable.VectorBuilder[io.deephaven.proto.backplane.script.grpc.console.TextEdit]
    val __commitCharacters: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __documentation: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.MarkupContent] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __start = _input__.readInt32()
        case 16 =>
          __length = _input__.readInt32()
        case 26 =>
          __label = _input__.readStringRequireUtf8()
        case 32 =>
          __kind = _input__.readInt32()
        case 42 =>
          __detail = _input__.readStringRequireUtf8()
        case 56 =>
          __deprecated = _input__.readBool()
        case 64 =>
          __preselect = _input__.readBool()
        case 74 =>
          __textEdit = _root_.scala.Option(__textEdit.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.TextEdit](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 82 =>
          __sortText = _input__.readStringRequireUtf8()
        case 90 =>
          __filterText = _input__.readStringRequireUtf8()
        case 96 =>
          __insertTextFormat = _input__.readInt32()
        case 106 =>
          __additionalTextEdits += _root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.TextEdit](_input__)
        case 114 =>
          __commitCharacters += _input__.readStringRequireUtf8()
        case 122 =>
          __documentation = _root_.scala.Option(__documentation.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.MarkupContent](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.deephaven.proto.backplane.script.grpc.console.CompletionItem(
        start = __start,
        length = __length,
        label = __label,
        kind = __kind,
        detail = __detail,
        deprecated = __deprecated,
        preselect = __preselect,
        textEdit = __textEdit,
        sortText = __sortText,
        filterText = __filterText,
        insertTextFormat = __insertTextFormat,
        additionalTextEdits = __additionalTextEdits.result(),
        commitCharacters = __commitCharacters.result(),
        documentation = __documentation,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.deephaven.proto.backplane.script.grpc.console.CompletionItem] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.deephaven.proto.backplane.script.grpc.console.CompletionItem(
        start = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        length = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        label = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        kind = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        detail = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        deprecated = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        preselect = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        textEdit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.TextEdit]]),
        sortText = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        filterText = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        insertTextFormat = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        additionalTextEdits = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Seq[io.deephaven.proto.backplane.script.grpc.console.TextEdit]]).getOrElse(_root_.scala.Seq.empty),
        commitCharacters = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        documentation = __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.MarkupContent]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ConsoleProto.javaDescriptor.getMessageTypes().get(30)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ConsoleProto.scalaDescriptor.messages(30)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 9 => __out = io.deephaven.proto.backplane.script.grpc.console.TextEdit
      case 13 => __out = io.deephaven.proto.backplane.script.grpc.console.TextEdit
      case 15 => __out = io.deephaven.proto.backplane.script.grpc.console.MarkupContent
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.deephaven.proto.backplane.script.grpc.console.CompletionItem(
    start = 0,
    length = 0,
    label = "",
    kind = 0,
    detail = "",
    deprecated = false,
    preselect = false,
    textEdit = _root_.scala.None,
    sortText = "",
    filterText = "",
    insertTextFormat = 0,
    additionalTextEdits = _root_.scala.Seq.empty,
    commitCharacters = _root_.scala.Seq.empty,
    documentation = _root_.scala.None
  )
  implicit class CompletionItemLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.CompletionItem]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.CompletionItem](_l) {
    def start: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.start)((c_, f_) => c_.copy(start = f_))
    def length: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.length)((c_, f_) => c_.copy(length = f_))
    def label: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.label)((c_, f_) => c_.copy(label = f_))
    def kind: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.kind)((c_, f_) => c_.copy(kind = f_))
    def detail: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.detail)((c_, f_) => c_.copy(detail = f_))
    def deprecated: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.deprecated)((c_, f_) => c_.copy(deprecated = f_))
    def preselect: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.preselect)((c_, f_) => c_.copy(preselect = f_))
    def textEdit: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.TextEdit] = field(_.getTextEdit)((c_, f_) => c_.copy(textEdit = _root_.scala.Option(f_)))
    def optionalTextEdit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.TextEdit]] = field(_.textEdit)((c_, f_) => c_.copy(textEdit = f_))
    def sortText: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.sortText)((c_, f_) => c_.copy(sortText = f_))
    def filterText: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.filterText)((c_, f_) => c_.copy(filterText = f_))
    def insertTextFormat: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.insertTextFormat)((c_, f_) => c_.copy(insertTextFormat = f_))
    def additionalTextEdits: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.deephaven.proto.backplane.script.grpc.console.TextEdit]] = field(_.additionalTextEdits)((c_, f_) => c_.copy(additionalTextEdits = f_))
    def commitCharacters: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.commitCharacters)((c_, f_) => c_.copy(commitCharacters = f_))
    def documentation: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.MarkupContent] = field(_.getDocumentation)((c_, f_) => c_.copy(documentation = _root_.scala.Option(f_)))
    def optionalDocumentation: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.MarkupContent]] = field(_.documentation)((c_, f_) => c_.copy(documentation = f_))
  }
  final val START_FIELD_NUMBER = 1
  final val LENGTH_FIELD_NUMBER = 2
  final val LABEL_FIELD_NUMBER = 3
  final val KIND_FIELD_NUMBER = 4
  final val DETAIL_FIELD_NUMBER = 5
  final val DEPRECATED_FIELD_NUMBER = 7
  final val PRESELECT_FIELD_NUMBER = 8
  final val TEXT_EDIT_FIELD_NUMBER = 9
  final val SORT_TEXT_FIELD_NUMBER = 10
  final val FILTER_TEXT_FIELD_NUMBER = 11
  final val INSERT_TEXT_FORMAT_FIELD_NUMBER = 12
  final val ADDITIONAL_TEXT_EDITS_FIELD_NUMBER = 13
  final val COMMIT_CHARACTERS_FIELD_NUMBER = 14
  final val DOCUMENTATION_FIELD_NUMBER = 15
  def of(
    start: _root_.scala.Int,
    length: _root_.scala.Int,
    label: _root_.scala.Predef.String,
    kind: _root_.scala.Int,
    detail: _root_.scala.Predef.String,
    deprecated: _root_.scala.Boolean,
    preselect: _root_.scala.Boolean,
    textEdit: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.TextEdit],
    sortText: _root_.scala.Predef.String,
    filterText: _root_.scala.Predef.String,
    insertTextFormat: _root_.scala.Int,
    additionalTextEdits: _root_.scala.Seq[io.deephaven.proto.backplane.script.grpc.console.TextEdit],
    commitCharacters: _root_.scala.Seq[_root_.scala.Predef.String],
    documentation: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.MarkupContent]
  ): _root_.io.deephaven.proto.backplane.script.grpc.console.CompletionItem = _root_.io.deephaven.proto.backplane.script.grpc.console.CompletionItem(
    start,
    length,
    label,
    kind,
    detail,
    deprecated,
    preselect,
    textEdit,
    sortText,
    filterText,
    insertTextFormat,
    additionalTextEdits,
    commitCharacters,
    documentation
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[io.deephaven.proto.backplane.script.grpc.CompletionItem])
}
