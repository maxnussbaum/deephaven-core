// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.deephaven.proto.backplane.script.grpc.console

@SerialVersionUID(0L)
final case class GetHoverRequest(
    textDocument: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.VersionedTextDocumentIdentifier] = _root_.scala.None,
    position: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.Position] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetHoverRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (textDocument.isDefined) {
        val __value = textDocument.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (position.isDefined) {
        val __value = position.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      textDocument.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      position.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getTextDocument: io.deephaven.proto.backplane.script.grpc.console.VersionedTextDocumentIdentifier = textDocument.getOrElse(io.deephaven.proto.backplane.script.grpc.console.VersionedTextDocumentIdentifier.defaultInstance)
    def clearTextDocument: GetHoverRequest = copy(textDocument = _root_.scala.None)
    def withTextDocument(__v: io.deephaven.proto.backplane.script.grpc.console.VersionedTextDocumentIdentifier): GetHoverRequest = copy(textDocument = Option(__v))
    def getPosition: io.deephaven.proto.backplane.script.grpc.console.Position = position.getOrElse(io.deephaven.proto.backplane.script.grpc.console.Position.defaultInstance)
    def clearPosition: GetHoverRequest = copy(position = _root_.scala.None)
    def withPosition(__v: io.deephaven.proto.backplane.script.grpc.console.Position): GetHoverRequest = copy(position = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => textDocument.orNull
        case 2 => position.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => textDocument.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => position.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest.type = io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest
    // @@protoc_insertion_point(GeneratedMessage[io.deephaven.proto.backplane.script.grpc.GetHoverRequest])
}

object GetHoverRequest extends scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest = {
    var __textDocument: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.VersionedTextDocumentIdentifier] = _root_.scala.None
    var __position: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.Position] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __textDocument = _root_.scala.Option(__textDocument.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.VersionedTextDocumentIdentifier](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __position = _root_.scala.Option(__position.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.script.grpc.console.Position](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest(
        textDocument = __textDocument,
        position = __position,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest(
        textDocument = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.VersionedTextDocumentIdentifier]]),
        position = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.Position]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ConsoleProto.javaDescriptor.getMessageTypes().get(37)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ConsoleProto.scalaDescriptor.messages(37)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.deephaven.proto.backplane.script.grpc.console.VersionedTextDocumentIdentifier
      case 2 => __out = io.deephaven.proto.backplane.script.grpc.console.Position
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest(
    textDocument = _root_.scala.None,
    position = _root_.scala.None
  )
  implicit class GetHoverRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest](_l) {
    def textDocument: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.VersionedTextDocumentIdentifier] = field(_.getTextDocument)((c_, f_) => c_.copy(textDocument = _root_.scala.Option(f_)))
    def optionalTextDocument: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.VersionedTextDocumentIdentifier]] = field(_.textDocument)((c_, f_) => c_.copy(textDocument = f_))
    def position: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.script.grpc.console.Position] = field(_.getPosition)((c_, f_) => c_.copy(position = _root_.scala.Option(f_)))
    def optionalPosition: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.Position]] = field(_.position)((c_, f_) => c_.copy(position = f_))
  }
  final val TEXT_DOCUMENT_FIELD_NUMBER = 1
  final val POSITION_FIELD_NUMBER = 2
  def of(
    textDocument: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.VersionedTextDocumentIdentifier],
    position: _root_.scala.Option[io.deephaven.proto.backplane.script.grpc.console.Position]
  ): _root_.io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest = _root_.io.deephaven.proto.backplane.script.grpc.console.GetHoverRequest(
    textDocument,
    position
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[io.deephaven.proto.backplane.script.grpc.GetHoverRequest])
}
