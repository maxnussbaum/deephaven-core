// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.deephaven.proto.backplane.grpc.table

/** Reusable options for the UpdateBy exponential moving operations.
  */
@SerialVersionUID(0L)
final case class UpdateByEmOptions(
    onNullValue: io.deephaven.proto.backplane.grpc.table.BadDataBehavior = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED,
    onNanValue: io.deephaven.proto.backplane.grpc.table.BadDataBehavior = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED,
    onNullTime: io.deephaven.proto.backplane.grpc.table.BadDataBehavior = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED,
    onNegativeDeltaTime: io.deephaven.proto.backplane.grpc.table.BadDataBehavior = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED,
    onZeroDeltaTime: io.deephaven.proto.backplane.grpc.table.BadDataBehavior = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED,
    bigValueContext: _root_.scala.Option[io.deephaven.proto.backplane.grpc.table.MathContext] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[UpdateByEmOptions] {
    @transient
    private var __serializedSizeMemoized: _root_.scala.Int = 0
    private def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = onNullValue.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      
      {
        val __value = onNanValue.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, __value)
        }
      };
      
      {
        val __value = onNullTime.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, __value)
        }
      };
      
      {
        val __value = onNegativeDeltaTime.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(4, __value)
        }
      };
      
      {
        val __value = onZeroDeltaTime.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(5, __value)
        }
      };
      if (bigValueContext.isDefined) {
        val __value = bigValueContext.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = onNullValue.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      {
        val __v = onNanValue.value
        if (__v != 0) {
          _output__.writeEnum(2, __v)
        }
      };
      {
        val __v = onNullTime.value
        if (__v != 0) {
          _output__.writeEnum(3, __v)
        }
      };
      {
        val __v = onNegativeDeltaTime.value
        if (__v != 0) {
          _output__.writeEnum(4, __v)
        }
      };
      {
        val __v = onZeroDeltaTime.value
        if (__v != 0) {
          _output__.writeEnum(5, __v)
        }
      };
      bigValueContext.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withOnNullValue(__v: io.deephaven.proto.backplane.grpc.table.BadDataBehavior): UpdateByEmOptions = copy(onNullValue = __v)
    def withOnNanValue(__v: io.deephaven.proto.backplane.grpc.table.BadDataBehavior): UpdateByEmOptions = copy(onNanValue = __v)
    def withOnNullTime(__v: io.deephaven.proto.backplane.grpc.table.BadDataBehavior): UpdateByEmOptions = copy(onNullTime = __v)
    def withOnNegativeDeltaTime(__v: io.deephaven.proto.backplane.grpc.table.BadDataBehavior): UpdateByEmOptions = copy(onNegativeDeltaTime = __v)
    def withOnZeroDeltaTime(__v: io.deephaven.proto.backplane.grpc.table.BadDataBehavior): UpdateByEmOptions = copy(onZeroDeltaTime = __v)
    def getBigValueContext: io.deephaven.proto.backplane.grpc.table.MathContext = bigValueContext.getOrElse(io.deephaven.proto.backplane.grpc.table.MathContext.defaultInstance)
    def clearBigValueContext: UpdateByEmOptions = copy(bigValueContext = _root_.scala.None)
    def withBigValueContext(__v: io.deephaven.proto.backplane.grpc.table.MathContext): UpdateByEmOptions = copy(bigValueContext = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = onNullValue.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => {
          val __t = onNanValue.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 3 => {
          val __t = onNullTime.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 4 => {
          val __t = onNegativeDeltaTime.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 5 => {
          val __t = onZeroDeltaTime.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 6 => bigValueContext.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(onNullValue.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PEnum(onNanValue.scalaValueDescriptor)
        case 3 => _root_.scalapb.descriptors.PEnum(onNullTime.scalaValueDescriptor)
        case 4 => _root_.scalapb.descriptors.PEnum(onNegativeDeltaTime.scalaValueDescriptor)
        case 5 => _root_.scalapb.descriptors.PEnum(onZeroDeltaTime.scalaValueDescriptor)
        case 6 => bigValueContext.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions.type = io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions
    // @@protoc_insertion_point(GeneratedMessage[io.deephaven.proto.backplane.grpc.UpdateByEmOptions])
}

object UpdateByEmOptions extends scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions = {
    var __onNullValue: io.deephaven.proto.backplane.grpc.table.BadDataBehavior = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED
    var __onNanValue: io.deephaven.proto.backplane.grpc.table.BadDataBehavior = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED
    var __onNullTime: io.deephaven.proto.backplane.grpc.table.BadDataBehavior = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED
    var __onNegativeDeltaTime: io.deephaven.proto.backplane.grpc.table.BadDataBehavior = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED
    var __onZeroDeltaTime: io.deephaven.proto.backplane.grpc.table.BadDataBehavior = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED
    var __bigValueContext: _root_.scala.Option[io.deephaven.proto.backplane.grpc.table.MathContext] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __onNullValue = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.fromValue(_input__.readEnum())
        case 16 =>
          __onNanValue = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.fromValue(_input__.readEnum())
        case 24 =>
          __onNullTime = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.fromValue(_input__.readEnum())
        case 32 =>
          __onNegativeDeltaTime = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.fromValue(_input__.readEnum())
        case 40 =>
          __onZeroDeltaTime = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.fromValue(_input__.readEnum())
        case 50 =>
          __bigValueContext = _root_.scala.Option(__bigValueContext.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.grpc.table.MathContext](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions(
        onNullValue = __onNullValue,
        onNanValue = __onNanValue,
        onNullTime = __onNullTime,
        onNegativeDeltaTime = __onNegativeDeltaTime,
        onZeroDeltaTime = __onZeroDeltaTime,
        bigValueContext = __bigValueContext,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions(
        onNullValue = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED.scalaValueDescriptor).number),
        onNanValue = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED.scalaValueDescriptor).number),
        onNullTime = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED.scalaValueDescriptor).number),
        onNegativeDeltaTime = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED.scalaValueDescriptor).number),
        onZeroDeltaTime = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED.scalaValueDescriptor).number),
        bigValueContext = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.grpc.table.MathContext]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = TableProto.javaDescriptor.getMessageTypes().get(12)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = TableProto.scalaDescriptor.messages(12)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?] = null
    (__number: @_root_.scala.unchecked) match {
      case 6 => __out = io.deephaven.proto.backplane.grpc.table.MathContext
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => io.deephaven.proto.backplane.grpc.table.BadDataBehavior
      case 2 => io.deephaven.proto.backplane.grpc.table.BadDataBehavior
      case 3 => io.deephaven.proto.backplane.grpc.table.BadDataBehavior
      case 4 => io.deephaven.proto.backplane.grpc.table.BadDataBehavior
      case 5 => io.deephaven.proto.backplane.grpc.table.BadDataBehavior
    }
  }
  lazy val defaultInstance = io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions(
    onNullValue = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED,
    onNanValue = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED,
    onNullTime = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED,
    onNegativeDeltaTime = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED,
    onZeroDeltaTime = io.deephaven.proto.backplane.grpc.table.BadDataBehavior.BAD_DATA_BEHAVIOR_NOT_SPECIFIED,
    bigValueContext = _root_.scala.None
  )
  implicit class UpdateByEmOptionsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions](_l) {
    def onNullValue: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.table.BadDataBehavior] = field(_.onNullValue)((c_, f_) => c_.copy(onNullValue = f_))
    def onNanValue: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.table.BadDataBehavior] = field(_.onNanValue)((c_, f_) => c_.copy(onNanValue = f_))
    def onNullTime: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.table.BadDataBehavior] = field(_.onNullTime)((c_, f_) => c_.copy(onNullTime = f_))
    def onNegativeDeltaTime: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.table.BadDataBehavior] = field(_.onNegativeDeltaTime)((c_, f_) => c_.copy(onNegativeDeltaTime = f_))
    def onZeroDeltaTime: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.table.BadDataBehavior] = field(_.onZeroDeltaTime)((c_, f_) => c_.copy(onZeroDeltaTime = f_))
    def bigValueContext: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.table.MathContext] = field(_.getBigValueContext)((c_, f_) => c_.copy(bigValueContext = _root_.scala.Option(f_)))
    def optionalBigValueContext: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.deephaven.proto.backplane.grpc.table.MathContext]] = field(_.bigValueContext)((c_, f_) => c_.copy(bigValueContext = f_))
  }
  final val ON_NULL_VALUE_FIELD_NUMBER = 1
  final val ON_NAN_VALUE_FIELD_NUMBER = 2
  final val ON_NULL_TIME_FIELD_NUMBER = 3
  final val ON_NEGATIVE_DELTA_TIME_FIELD_NUMBER = 4
  final val ON_ZERO_DELTA_TIME_FIELD_NUMBER = 5
  final val BIG_VALUE_CONTEXT_FIELD_NUMBER = 6
  def of(
    onNullValue: io.deephaven.proto.backplane.grpc.table.BadDataBehavior,
    onNanValue: io.deephaven.proto.backplane.grpc.table.BadDataBehavior,
    onNullTime: io.deephaven.proto.backplane.grpc.table.BadDataBehavior,
    onNegativeDeltaTime: io.deephaven.proto.backplane.grpc.table.BadDataBehavior,
    onZeroDeltaTime: io.deephaven.proto.backplane.grpc.table.BadDataBehavior,
    bigValueContext: _root_.scala.Option[io.deephaven.proto.backplane.grpc.table.MathContext]
  ): _root_.io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions = _root_.io.deephaven.proto.backplane.grpc.table.UpdateByEmOptions(
    onNullValue,
    onNanValue,
    onNullTime,
    onNegativeDeltaTime,
    onZeroDeltaTime,
    bigValueContext
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.UpdateByEmOptions])
}
