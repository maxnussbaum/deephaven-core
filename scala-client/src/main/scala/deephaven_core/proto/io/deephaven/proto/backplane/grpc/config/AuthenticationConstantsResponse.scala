// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.deephaven.proto.backplane.grpc.config

@SerialVersionUID(0L)
final case class AuthenticationConstantsResponse(
    configValues: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue] = _root_.scala.collection.immutable.Map.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AuthenticationConstantsResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      configValues.foreach { __item =>
        val __value = io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse._typemapper_configValues.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      configValues.foreach { __v =>
        val __m = io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse._typemapper_configValues.toBase(__v)
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def clearConfigValues = copy(configValues = _root_.scala.collection.immutable.Map.empty)
    def addConfigValues(__vs: (_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue) *): AuthenticationConstantsResponse = addAllConfigValues(__vs)
    def addAllConfigValues(__vs: Iterable[(_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue)]): AuthenticationConstantsResponse = copy(configValues = configValues ++ __vs)
    def withConfigValues(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue]): AuthenticationConstantsResponse = copy(configValues = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => configValues.iterator.map(io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse._typemapper_configValues.toBase(_)).toSeq
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(configValues.iterator.map(io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse._typemapper_configValues.toBase(_).toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.type = io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse
    // @@protoc_insertion_point(GeneratedMessage[io.deephaven.proto.backplane.grpc.AuthenticationConstantsResponse])
}

object AuthenticationConstantsResponse extends scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse = {
    val __configValues: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __configValues += io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse._typemapper_configValues.toCustom(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry](_input__))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse(
        configValues = __configValues.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse(
        configValues = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse._typemapper_configValues.toCustom(_)).toMap
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.deephaven.proto.backplane.grpc.config.ConfigProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.deephaven.proto.backplane.grpc.config.ConfigProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse(
    configValues = _root_.scala.collection.immutable.Map.empty
  )
  @SerialVersionUID(0L)
  final case class ConfigValuesEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Option[io.deephaven.proto.backplane.grpc.config.ConfigValue] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ConfigValuesEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (value.isDefined) {
          val __value = value.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): ConfigValuesEntry = copy(key = __v)
      def getValue: io.deephaven.proto.backplane.grpc.config.ConfigValue = value.getOrElse(io.deephaven.proto.backplane.grpc.config.ConfigValue.defaultInstance)
      def clearValue: ConfigValuesEntry = copy(value = _root_.scala.None)
      def withValue(__v: io.deephaven.proto.backplane.grpc.config.ConfigValue): ConfigValuesEntry = copy(value = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry.type = io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry
      // @@protoc_insertion_point(GeneratedMessage[io.deephaven.proto.backplane.grpc.AuthenticationConstantsResponse.ConfigValuesEntry])
  }
  
  object ConfigValuesEntry extends scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Option[io.deephaven.proto.backplane.grpc.config.ConfigValue] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _root_.scala.Option(__value.fold(_root_.scalapb.LiteParser.readMessage[io.deephaven.proto.backplane.grpc.config.ConfigValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[io.deephaven.proto.backplane.grpc.config.ConfigValue]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = io.deephaven.proto.backplane.grpc.config.ConfigValue
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry(
      key = "",
      value = _root_.scala.None
    )
    implicit class ConfigValuesEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.config.ConfigValue] = field(_.getValue)((c_, f_) => c_.copy(value = _root_.scala.Option(f_)))
      def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.deephaven.proto.backplane.grpc.config.ConfigValue]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry, (_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue)] =
      _root_.scalapb.TypeMapper[io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry, (_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue)](__m => (__m.key, __m.getValue))(__p => io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry(__p._1, Some(__p._2)))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Option[io.deephaven.proto.backplane.grpc.config.ConfigValue]
    ): _root_.io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry = _root_.io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.AuthenticationConstantsResponse.ConfigValuesEntry])
  }
  
  implicit class AuthenticationConstantsResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse](_l) {
    def configValues: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue]] = field(_.configValues)((c_, f_) => c_.copy(configValues = f_))
  }
  final val CONFIG_VALUES_FIELD_NUMBER = 1
  @transient
  private[config] val _typemapper_configValues: _root_.scalapb.TypeMapper[io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry, (_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue)] = implicitly[_root_.scalapb.TypeMapper[io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse.ConfigValuesEntry, (_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue)]]
  def of(
    configValues: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, io.deephaven.proto.backplane.grpc.config.ConfigValue]
  ): _root_.io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse = _root_.io.deephaven.proto.backplane.grpc.config.AuthenticationConstantsResponse(
    configValues
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[io.deephaven.proto.backplane.grpc.AuthenticationConstantsResponse])
}
