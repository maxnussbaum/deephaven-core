// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package io.deephaven.proto.backplane.grpc.session

object SessionProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    io.deephaven.proto.backplane.grpc.ticket.TicketProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      io.deephaven.proto.backplane.grpc.session.WrappedAuthenticationRequest,
      io.deephaven.proto.backplane.grpc.session.HandshakeRequest,
      io.deephaven.proto.backplane.grpc.session.HandshakeResponse,
      io.deephaven.proto.backplane.grpc.session.CloseSessionResponse,
      io.deephaven.proto.backplane.grpc.session.ReleaseRequest,
      io.deephaven.proto.backplane.grpc.session.ReleaseResponse,
      io.deephaven.proto.backplane.grpc.session.ExportRequest,
      io.deephaven.proto.backplane.grpc.session.ExportResponse,
      io.deephaven.proto.backplane.grpc.session.PublishRequest,
      io.deephaven.proto.backplane.grpc.session.PublishResponse,
      io.deephaven.proto.backplane.grpc.session.ExportNotificationRequest,
      io.deephaven.proto.backplane.grpc.session.ExportNotification,
      io.deephaven.proto.backplane.grpc.session.TerminationNotificationRequest,
      io.deephaven.proto.backplane.grpc.session.TerminationNotificationResponse
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CiJkZWVwaGF2ZW5fY29yZS9wcm90by9zZXNzaW9uLnByb3RvEiFpby5kZWVwaGF2ZW4ucHJvdG8uYmFja3BsYW5lLmdycGMaI
  WRlZXBoYXZlbl9jb3JlL3Byb3RvL3RpY2tldC5wcm90byJxChxXcmFwcGVkQXV0aGVudGljYXRpb25SZXF1ZXN0Eh0KBHR5cGUYB
  CABKAlCCeI/BhIEdHlwZVIEdHlwZRImCgdwYXlsb2FkGAUgASgMQgziPwkSB3BheWxvYWRSB3BheWxvYWRKBAgCEANKBAgDEAQid
  goQSGFuZHNoYWtlUmVxdWVzdBI4Cg1hdXRoX3Byb3RvY29sGAEgASgRQhMYAeI/DhIMYXV0aFByb3RvY29sUgxhdXRoUHJvdG9jb
  2wSKAoHcGF5bG9hZBgCIAEoDEIOGAHiPwkSB3BheWxvYWRSB3BheWxvYWQi1AIKEUhhbmRzaGFrZVJlc3BvbnNlEj4KD21ldGFkY
  XRhX2hlYWRlchgBIAEoDEIVGAHiPxASDm1ldGFkYXRhSGVhZGVyUg5tZXRhZGF0YUhlYWRlchI4Cg1zZXNzaW9uX3Rva2VuGAIgA
  SgMQhMYAeI/DhIMc2Vzc2lvblRva2VuUgxzZXNzaW9uVG9rZW4SXQoadG9rZW5fZGVhZGxpbmVfdGltZV9taWxsaXMYAyABKBJCI
  BgBMAHiPxkSF3Rva2VuRGVhZGxpbmVUaW1lTWlsbGlzUhd0b2tlbkRlYWRsaW5lVGltZU1pbGxpcxJmCh10b2tlbl9leHBpcmF0a
  W9uX2RlbGF5X21pbGxpcxgEIAEoEkIjGAEwAeI/HBIadG9rZW5FeHBpcmF0aW9uRGVsYXlNaWxsaXNSGnRva2VuRXhwaXJhdGlvb
  kRlbGF5TWlsbGlzIhYKFENsb3NlU2Vzc2lvblJlc3BvbnNlIlQKDlJlbGVhc2VSZXF1ZXN0EkIKAmlkGAEgASgLMikuaW8uZGVlc
  GhhdmVuLnByb3RvLmJhY2twbGFuZS5ncnBjLlRpY2tldEIH4j8EEgJpZFICaWQiEQoPUmVsZWFzZVJlc3BvbnNlIr0BCg1FeHBvc
  nRSZXF1ZXN0ElUKCXNvdXJjZV9pZBgBIAEoCzIpLmlvLmRlZXBoYXZlbi5wcm90by5iYWNrcGxhbmUuZ3JwYy5UaWNrZXRCDeI/C
  hIIc291cmNlSWRSCHNvdXJjZUlkElUKCXJlc3VsdF9pZBgCIAEoCzIpLmlvLmRlZXBoYXZlbi5wcm90by5iYWNrcGxhbmUuZ3JwY
  y5UaWNrZXRCDeI/ChIIcmVzdWx0SWRSCHJlc3VsdElkIhAKDkV4cG9ydFJlc3BvbnNlIr4BCg5QdWJsaXNoUmVxdWVzdBJVCglzb
  3VyY2VfaWQYASABKAsyKS5pby5kZWVwaGF2ZW4ucHJvdG8uYmFja3BsYW5lLmdycGMuVGlja2V0Qg3iPwoSCHNvdXJjZUlkUghzb
  3VyY2VJZBJVCglyZXN1bHRfaWQYAiABKAsyKS5pby5kZWVwaGF2ZW4ucHJvdG8uYmFja3BsYW5lLmdycGMuVGlja2V0Qg3iPwoSC
  HJlc3VsdElkUghyZXN1bHRJZCIRCg9QdWJsaXNoUmVzcG9uc2UiGwoZRXhwb3J0Tm90aWZpY2F0aW9uUmVxdWVzdCKWBgoSRXhwb
  3J0Tm90aWZpY2F0aW9uEk4KBnRpY2tldBgBIAEoCzIpLmlvLmRlZXBoYXZlbi5wcm90by5iYWNrcGxhbmUuZ3JwYy5UaWNrZXRCC
  +I/CBIGdGlja2V0UgZ0aWNrZXQScAoMZXhwb3J0X3N0YXRlGAIgASgOMjsuaW8uZGVlcGhhdmVuLnByb3RvLmJhY2twbGFuZS5nc
  nBjLkV4cG9ydE5vdGlmaWNhdGlvbi5TdGF0ZUIQ4j8NEgtleHBvcnRTdGF0ZVILZXhwb3J0U3RhdGUSJgoHY29udGV4dBgDIAEoC
  UIM4j8JEgdjb250ZXh0Ugdjb250ZXh0Ej8KEGRlcGVuZGVudF9oYW5kbGUYBCABKAlCFOI/ERIPZGVwZW5kZW50SGFuZGxlUg9kZ
  XBlbmRlbnRIYW5kbGUi1AMKBVN0YXRlEhkKB1VOS05PV04QABoM4j8JEgdVTktOT1dOEhkKB1BFTkRJTkcQARoM4j8JEgdQRU5ES
  U5HEh8KClBVQkxJU0hJTkcQAhoP4j8MEgpQVUJMSVNISU5HEhcKBlFVRVVFRBADGgviPwgSBlFVRVVFRBIZCgdSVU5OSU5HEAQaD
  OI/CRIHUlVOTklORxIbCghFWFBPUlRFRBAFGg3iPwoSCEVYUE9SVEVEEhsKCFJFTEVBU0VEEAYaDeI/ChIIUkVMRUFTRUQSHQoJQ
  0FOQ0VMTEVEEAcaDuI/CxIJQ0FOQ0VMTEVEEhcKBkZBSUxFRBAIGgviPwgSBkZBSUxFRBItChFERVBFTkRFTkNZX0ZBSUxFRBAJG
  hbiPxMSEURFUEVOREVOQ1lfRkFJTEVEEjcKFkRFUEVOREVOQ1lfTkVWRVJfRk9VTkQQChob4j8YEhZERVBFTkRFTkNZX05FVkVSX
  0ZPVU5EEjMKFERFUEVOREVOQ1lfQ0FOQ0VMTEVEEAsaGeI/FhIUREVQRU5ERU5DWV9DQU5DRUxMRUQSMQoTREVQRU5ERU5DWV9SR
  UxFQVNFRBAMGhjiPxUSE0RFUEVOREVOQ1lfUkVMRUFTRUQiIAoeVGVybWluYXRpb25Ob3RpZmljYXRpb25SZXF1ZXN0IvMDCh9UZ
  XJtaW5hdGlvbk5vdGlmaWNhdGlvblJlc3BvbnNlEksKFGFibm9ybWFsX3Rlcm1pbmF0aW9uGAEgASgIQhjiPxUSE2Fibm9ybWFsV
  GVybWluYXRpb25SE2Fibm9ybWFsVGVybWluYXRpb24SIwoGcmVhc29uGAIgASgJQgviPwgSBnJlYXNvblIGcmVhc29uElkKGmlzX
  2Zyb21fdW5jYXVnaHRfZXhjZXB0aW9uGAMgASgIQhziPxkSF2lzRnJvbVVuY2F1Z2h0RXhjZXB0aW9uUhdpc0Zyb21VbmNhdWdod
  EV4Y2VwdGlvbhKCAQoMc3RhY2tfdHJhY2VzGAQgAygLMk0uaW8uZGVlcGhhdmVuLnByb3RvLmJhY2twbGFuZS5ncnBjLlRlcm1pb
  mF0aW9uTm90aWZpY2F0aW9uUmVzcG9uc2UuU3RhY2tUcmFjZUIQ4j8NEgtzdGFja1RyYWNlc1ILc3RhY2tUcmFjZXMafgoKU3RhY
  2tUcmFjZRIdCgR0eXBlGAEgASgJQgniPwYSBHR5cGVSBHR5cGUSJgoHbWVzc2FnZRgCIAEoCUIM4j8JEgdtZXNzYWdlUgdtZXNzY
  WdlEikKCGVsZW1lbnRzGAMgAygJQg3iPwoSCGVsZW1lbnRzUghlbGVtZW50czK5CAoOU2Vzc2lvblNlcnZpY2USfAoKTmV3U2Vzc
  2lvbhIzLmlvLmRlZXBoYXZlbi5wcm90by5iYWNrcGxhbmUuZ3JwYy5IYW5kc2hha2VSZXF1ZXN0GjQuaW8uZGVlcGhhdmVuLnByb
  3RvLmJhY2twbGFuZS5ncnBjLkhhbmRzaGFrZVJlc3BvbnNlIgOIAgEShQEKE1JlZnJlc2hTZXNzaW9uVG9rZW4SMy5pby5kZWVwa
  GF2ZW4ucHJvdG8uYmFja3BsYW5lLmdycGMuSGFuZHNoYWtlUmVxdWVzdBo0LmlvLmRlZXBoYXZlbi5wcm90by5iYWNrcGxhbmUuZ
  3JwYy5IYW5kc2hha2VSZXNwb25zZSIDiAIBEn4KDENsb3NlU2Vzc2lvbhIzLmlvLmRlZXBoYXZlbi5wcm90by5iYWNrcGxhbmUuZ
  3JwYy5IYW5kc2hha2VSZXF1ZXN0GjcuaW8uZGVlcGhhdmVuLnByb3RvLmJhY2twbGFuZS5ncnBjLkNsb3NlU2Vzc2lvblJlc3Bvb
  nNlIgAScgoHUmVsZWFzZRIxLmlvLmRlZXBoYXZlbi5wcm90by5iYWNrcGxhbmUuZ3JwYy5SZWxlYXNlUmVxdWVzdBoyLmlvLmRlZ
  XBoYXZlbi5wcm90by5iYWNrcGxhbmUuZ3JwYy5SZWxlYXNlUmVzcG9uc2UiABJ5ChBFeHBvcnRGcm9tVGlja2V0EjAuaW8uZGVlc
  GhhdmVuLnByb3RvLmJhY2twbGFuZS5ncnBjLkV4cG9ydFJlcXVlc3QaMS5pby5kZWVwaGF2ZW4ucHJvdG8uYmFja3BsYW5lLmdyc
  GMuRXhwb3J0UmVzcG9uc2UiABJ8ChFQdWJsaXNoRnJvbVRpY2tldBIxLmlvLmRlZXBoYXZlbi5wcm90by5iYWNrcGxhbmUuZ3JwY
  y5QdWJsaXNoUmVxdWVzdBoyLmlvLmRlZXBoYXZlbi5wcm90by5iYWNrcGxhbmUuZ3JwYy5QdWJsaXNoUmVzcG9uc2UiABKOAQoTR
  Xhwb3J0Tm90aWZpY2F0aW9ucxI8LmlvLmRlZXBoYXZlbi5wcm90by5iYWNrcGxhbmUuZ3JwYy5FeHBvcnROb3RpZmljYXRpb25SZ
  XF1ZXN0GjUuaW8uZGVlcGhhdmVuLnByb3RvLmJhY2twbGFuZS5ncnBjLkV4cG9ydE5vdGlmaWNhdGlvbiIAMAESogEKF1Rlcm1pb
  mF0aW9uTm90aWZpY2F0aW9uEkEuaW8uZGVlcGhhdmVuLnByb3RvLmJhY2twbGFuZS5ncnBjLlRlcm1pbmF0aW9uTm90aWZpY2F0a
  W9uUmVxdWVzdBpCLmlvLmRlZXBoYXZlbi5wcm90by5iYWNrcGxhbmUuZ3JwYy5UZXJtaW5hdGlvbk5vdGlmaWNhdGlvblJlc3Bvb
  nNlIgBCQ0gBUAFaPWdpdGh1Yi5jb20vZGVlcGhhdmVuL2RlZXBoYXZlbi1jb3JlL2dvL2ludGVybmFsL3Byb3RvL3Nlc3Npb25iB
  nByb3RvMw=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      io.deephaven.proto.backplane.grpc.ticket.TicketProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}